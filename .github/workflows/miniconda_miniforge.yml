name: clustbench_miniforge
# concurrency:
#   group: ${{ github.head_ref || github.run_id  }}
#   cancel-in-progress: true

on:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "30 1 * * *" # at 1.30am
    

jobs:
  run-benchmark-miniforge:
    name: run_clustbench_miniforge
    ## runs-on: ubuntu-latest
    runs-on: self-hosted
    strategy:
      matrix:
        ob_branch: [main]
      fail-fast: false
    concurrency:
      group: mambaforge-${{ matrix.ob_branch }}
      cancel-in-progress: false # true
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install Mambaforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-variant: Miniforge3
          use-mamba: true
          activate-environment: test-env-${{matrix.ob_branch }}
          python-version: "3.12"
          auto-update-conda: true
          channels: conda-forge

      - name: Cache environment
        id: cache-env
        uses: actions/cache@v3
        with:
          path: |
            ~/.conda/pkgs
            ~/.conda/envs/omnibenchmark-env
            ~/.cache/pip
          key: ${{ runner.os }}-conda-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-conda-pip-

      - name: Install omnibenchmark CLI
        shell: bash -l {0}
        run: |
          mamba install -y pip
          pip install git+https://github.com/omnibenchmark/omnibenchmark.git@${{ matrix.ob_branch }}

      - name: Run benchmark
        shell: bash -l {0}
        run: |
          env
          output=$( ob run benchmark -b Clustering_conda_short.yaml --local --cores 10  2>&1 )
          status=$?
          if echo "$output" | grep -i 'Benchmark run has finished successfully'; then
             status=0
          fi
          echo -e $output
          sh -c "exit $status"
        if: matrix.ob_branch == 'main'
